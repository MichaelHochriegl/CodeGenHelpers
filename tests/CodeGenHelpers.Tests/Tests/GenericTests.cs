using Xunit;
using Xunit.Abstractions;

namespace CodeGenHelpers.Tests
{
    public class GenericTests
    {
        private readonly ITestOutputHelper _testOutputHelper;

        public GenericTests(ITestOutputHelper testOutputHelper)
        {
            _testOutputHelper = testOutputHelper;
        }

        [Fact]
        public void GenerateSimpleGenericClass()
        {
            var builder = CodeBuilder.Create("AwesomeApp")
                .AddClass("SampleGenericClass")
                .AddGeneric("T")
                .WithConstraint("class")
                .Parent;

            var expected = @"namespace AwesomeApp
{
    partial class SampleGenericClass <T> : where T : class
    {
    }
}
";
            _testOutputHelper.WriteLine(expected);
            _testOutputHelper.WriteLine("____________________");
            _testOutputHelper.WriteLine(builder.Build());

            AreEqual(expected, builder);
        }

        [Fact]
        public void WithMultipleGenerics()
        {
            var builder = CodeBuilder.Create("AwesomeApp")
                .AddClass("SampleGenericClass")
                .AddGeneric("T")
                .WithConstraint("class")
                .Parent
                .AddGeneric("U")
                .WithConstraint("class")
                .Parent;

            var expected = @"namespace AwesomeApp
{
    partial class SampleGenericClass <T, U> : where T : class where U : class
    {
    }
}
";
            _testOutputHelper.WriteLine(expected);
            _testOutputHelper.WriteLine("____________________");
            _testOutputHelper.WriteLine(builder.Build());

            AreEqual(expected, builder);
        }

        private void AreEqual(string expected, ClassBuilder builder)
        {
            var expectedOutput = $@"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

{expected}";

            Assert.Equal(expectedOutput, builder.Build(), ignoreLineEndingDifferences: true, ignoreWhiteSpaceDifferences: true);
        }
    }
}
